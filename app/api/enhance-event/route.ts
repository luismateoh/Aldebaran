import Groq from 'groq-sdk'
import { NextRequest, NextResponse } from 'next/server'
import fs from 'fs'
import path from 'path'

// Funci√≥n simplificada para crear placeholder SVG (sin dependencias externas)
function createEventPlaceholder(eventId: string) {
  try {
    const publicImagesDir = path.join(process.cwd(), 'public', 'images', 'events')
    
    // Verificar si el directorio existe, si no, crearlo
    if (!fs.existsSync(publicImagesDir)) {
      fs.mkdirSync(publicImagesDir, { recursive: true })
    }
    
    // Crear SVG simple
    const svgContent = `<svg width="800" height="400" xmlns="http://www.w3.org/2000/svg">
      <defs>
        <linearGradient id="grad" x1="0%" y1="0%" x2="100%" y2="100%">
          <stop offset="0%" style="stop-color:#3b82f6;stop-opacity:1" />
          <stop offset="100%" style="stop-color:#1e40af;stop-opacity:1" />
        </linearGradient>
      </defs>
      <rect width="100%" height="100%" fill="url(#grad)"/>
      <text x="50%" y="50%" fill="white" text-anchor="middle" dy=".3em" font-size="24" font-family="Arial, sans-serif">
        ${eventId.replace(/_/g, ' ').replace(/\d+/g, '').trim() || 'Evento'}
      </text>
    </svg>`
    
    const filePath = path.join(publicImagesDir, `${eventId}.svg`)
    fs.writeFileSync(filePath, svgContent)
    console.log(`‚úÖ Placeholder SVG creado: ${filePath}`)
  } catch (error) {
    console.log(`‚ùå Error creando placeholder para ${eventId}:`, error)
  }
}

// Funci√≥n para procesar imagen del evento en background (sin descargas externas en producci√≥n)
async function processEventImage(imageUrl: string, eventId: string) {
  try {
    // En producci√≥n, solo crear placeholder SVG local
    if (process.env.NODE_ENV === 'production') {
      createEventPlaceholder(eventId)
      console.log(`‚úÖ Placeholder creado para evento en producci√≥n: ${eventId}`)
    } else {
      // En desarrollo, intentar descargar si la URL es v√°lida
      if (imageUrl && imageUrl.startsWith('http')) {
        console.log(`üîÑ En desarrollo - URL de imagen detectada: ${imageUrl}`)
        createEventPlaceholder(eventId) // Por simplicidad, solo crear placeholder
      } else {
        createEventPlaceholder(eventId)
        console.log(`‚úÖ Placeholder creado para evento: ${eventId}`)
      }
    }
  } catch (error) {
    console.log(`‚ùå Error procesando imagen para ${eventId}:`, error)
    // Crear placeholder como fallback
    try {
      createEventPlaceholder(eventId)
    } catch (placeholderError) {
      console.log(`‚ùå Error creando placeholder:`, placeholderError)
    }
  }
}

// Groq es gratuito y muy r√°pido
const groq = new Groq({
  apiKey: process.env.GROQ_API_KEY || 'demo', // Si no hay API key, usa fallback
})

export async function POST(request: NextRequest) {
  try {
    const eventData = await request.json()
    console.log('üîç Datos recibidos para mejorar evento:', {
      title: eventData.title,
      eventDate: eventData.eventDate,
      date: eventData.date,
      hasWebsite: !!eventData.website
    })
    
    // Primero intentar obtener informaci√≥n web si hay URL
    let webContent = ''
    if (eventData.website && eventData.website.startsWith('http')) {
      try {
        console.log(`üîç Buscando informaci√≥n en: ${eventData.website}`)
        const response = await fetch('/api/web-search', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ 
            url: eventData.website,
            query: `informaci√≥n evento ${eventData.title} ${eventData.municipality}` 
          })
        })
        
        if (response.ok) {
          const webData = await response.json()
          webContent = webData.content || ''
          console.log(`‚úÖ Informaci√≥n web obtenida: ${webContent.length} caracteres`)
        }
      } catch (webError) {
        console.log('‚ö†Ô∏è No se pudo obtener informaci√≥n web, continuando sin ella')
      }
    }

    const prompt = `Genera una descripci√≥n mejorada para este evento de atletismo en Colombia.

DATOS DEL EVENTO:
- T√≠tulo: ${eventData.title}
- Fecha: ${eventData.eventDate}
- Lugar: ${eventData.municipality}, ${eventData.department}
- Organizador: ${eventData.organizer || 'Por definir'}
- Distancias: ${eventData.distances?.join(', ') || 'Por definir'}
- Costo: ${eventData.registrationFeed || 'Por confirmar'}
${webContent ? `- Informaci√≥n adicional web: ${webContent.substring(0, 500)}...` : ''}

INSTRUCCIONES:
- Escribe SOLO una descripci√≥n fluida en espa√±ol (m√°ximo 200 palabras)
- Incluye detalles espec√≠ficos sobre el lugar y la experiencia del evento
- Mant√©n un tono entusiasta pero profesional
- NO incluyas frontmatter, t√≠tulos, ni estructura markdown
- NO menciones informaci√≥n que no tengas (fechas espec√≠ficas, precios, etc.)

Descripci√≥n:`

    let aiDescription = ''

    // Intentar con Groq primero (gratuito) - solo para generar descripci√≥n
    if (process.env.GROQ_API_KEY && process.env.GROQ_API_KEY !== 'demo') {
      try {
        const completion = await groq.chat.completions.create({
          model: "llama-3.1-8b-instant", // Modelo m√°s estable
          messages: [
            {
              role: "system",
              content: "Eres un experto en eventos deportivos en Colombia. Escribes descripciones atractivas y profesionales."
            },
            {
              role: "user",
              content: prompt
            }
          ],
          max_tokens: 300,
          temperature: 0.7,
        })

        aiDescription = completion.choices[0]?.message?.content?.trim() || ''
        console.log(`‚úÖ Descripci√≥n de IA generada: ${aiDescription.length} caracteres`)
      } catch (error) {
        console.log('‚ö†Ô∏è Groq failed, usando descripci√≥n b√°sica:', error)
      }
    }

    // Generar markdown estructurado con la descripci√≥n de IA o b√°sica
    const enhancedMarkdown = generateCleanMarkdown(eventData, aiDescription, webContent)

    // Procesar imagen del evento en paralelo (no bloquear la respuesta)
    let localImagePath = null
    if (eventData.cover && eventData.id) {
      try {
        // Intentar descargar imagen en background
        processEventImage(eventData.cover, eventData.id)
      } catch (imageError) {
        console.log('Error processing image (non-critical):', imageError)
      }
    }

    return NextResponse.json({ 
      markdown: enhancedMarkdown,
      success: true,
      provider: aiDescription ? 'ai' : 'basic',
      webContentUsed: !!webContent,
      imageProcessed: !!eventData.cover
    })

  } catch (error) {
    console.error('Error enhancing event:', error)
    
    // Fallback: generar markdown b√°sico
    try {
      const eventData = await request.json()
      const fallbackMarkdown = generateCleanMarkdown(eventData, '', '')
      
      return NextResponse.json({ 
        markdown: fallbackMarkdown,
        success: false,
        provider: 'basic',
        message: 'Usando generaci√≥n b√°sica'
      })
    } catch (fallbackError) {
      return NextResponse.json({ 
        error: 'Error completo al generar contenido',
        success: false
      }, { status: 500 })
    }
  }
}

function generateCleanMarkdown(eventData: any, aiDescription: string = '', webContent: string = '') {
  // Manejar fecha de manera m√°s robusta
  let date = new Date(eventData.eventDate || eventData.date)
  let formattedDate = 'Por definir'
  let year = new Date().getFullYear()
  let month = String(new Date().getMonth() + 1).padStart(2, '0')
  let day = String(new Date().getDate()).padStart(2, '0')
  
  // Verificar si la fecha es v√°lida
  if (!isNaN(date.getTime())) {
    year = date.getFullYear()
    month = String(date.getMonth() + 1).padStart(2, '0')
    day = String(date.getDate()).padStart(2, '0')
    formattedDate = date.toLocaleDateString('es-CO', { 
      weekday: 'long', 
      year: 'numeric', 
      month: 'long', 
      day: 'numeric' 
    })
  } else {
    console.log('‚ö†Ô∏è Fecha inv√°lida recibida:', eventData.eventDate || eventData.date)
    // Usar fecha de hoy como fallback
    date = new Date()
    formattedDate = 'Fecha por confirmar'
  }
  
  // Usar descripci√≥n de IA si est√° disponible, sino la b√°sica, sino generar una
  let description = aiDescription || eventData.description
  
  if (!description) {
    description = `√önete a este emocionante evento de atletismo en ${eventData.municipality}, ${eventData.department}. Una experiencia deportiva que combina competencia, diversi√≥n y los hermosos paisajes de esta regi√≥n colombiana.`
  }

  // Informaci√≥n de regi√≥n simplificada
  const regionInfo = getSimpleRegionInfo(eventData.department)
  
  return `---
title: "${eventData.title || 'Evento de Atletismo'}"
author: "Luis Hincapie"
publishDate: "${new Date().toISOString().split('T')[0]}"
draft: false
category: "${eventData.category || 'Running'}"
tags:
  - "${(eventData.category || 'running').toLowerCase()}"
  - "${(eventData.municipality || 'colombia').toLowerCase()}"
  - "atletismo"
snippet: "${description.substring(0, 150).replace(/"/g, '\\"')}..."
altitude: "${regionInfo.altitude}"
eventDate: "${year}-${month}-${day}"
organizer: "${eventData.organizer || 'Por confirmar'}"
registrationDeadline: "${year}-${month}-${day}"
registrationFeed: "${eventData.registrationFeed || 'Por confirmar'}"
website: "${eventData.website || ''}"
distances:${eventData.distances?.map((d: string) => `\n  - "${d}"`).join('') || '\n  - "Por definir"'}
cover: ""
department: "${eventData.department || ''}"
municipality: "${eventData.municipality || ''}"
---

${description}

## Informaci√≥n del Evento

- Fecha: ${formattedDate}
- Lugar: ${eventData.municipality || 'Por definir'}, ${eventData.department || 'Colombia'}
- Organizador: ${eventData.organizer || 'Por confirmar'}
- Altitud: ${regionInfo.altitude}

${eventData.distances?.length ? `## Distancias Disponibles

${eventData.distances.map((d: string) => `- ${d} - ${getDistanceDescription(d)}`).join('\n')}` : ''}

## Informaci√≥n Importante

- Llegar con 30-45 minutos de anticipaci√≥n
- Llevar documento de identidad
- Usar ropa deportiva adecuada
- Mantenerse hidratado durante el evento

${eventData.website ? `## M√°s Informaci√≥n

Sitio web oficial: ${eventData.website}` : ''}

---

¬°Prep√°rate para vivir una experiencia deportiva inolvidable!
`
}

function getSimpleRegionInfo(department: string) {
  const regions = {
    'Antioquia': { altitude: '1,495 msnm' },
    'Bogot√°': { altitude: '2,640 msnm' },
    'Valle del Cauca': { altitude: '1,000 msnm' },
    'Atl√°ntico': { altitude: '18 msnm' },
    'Cundinamarca': { altitude: '2,000 msnm' },
    'Santander': { altitude: '760 msnm' },
  } as any

  return regions[department] || { altitude: 'Variable' }
}

// Mantener la funci√≥n anterior por compatibilidad
function generateEnhancedMarkdown(eventData: any) {
  const date = new Date(eventData.eventDate)
  const year = date.getFullYear()
  const month = date.toLocaleDateString('en', { month: 'short' }).toLowerCase()
  const day = date.getDate()
  
  // Informaci√≥n contextual basada en la regi√≥n
  const regionInfo = getRegionInfo(eventData.department)
  const distanceInfo = getDistanceRecommendations(eventData.distances)
  
  return `---
title: ${eventData.title?.toUpperCase() || 'EVENTO DE ATLETISMO'}
author: Luis Hincapie
publishDate: ${new Date().toISOString().split('T')[0]}
draft: false
category: ${eventData.category || 'Running'}
tags:
  - ${eventData.category?.toLowerCase() || 'running'}
  - ${eventData.municipality?.toLowerCase() || 'colombia'}
snippet: ${eventData.description || `√önete a este emocionante evento de atletismo en ${eventData.municipality || 'Colombia'}. Una experiencia deportiva √∫nica que combina competencia, diversi√≥n y paisajes espectaculares.`}
altitude: ${regionInfo.altitude}
eventDate: ${year}-${month}-${day}
organizer: ${eventData.organizer || 'Por confirmar'}
registrationDeadline: ${year}-${month}-${day}
registrationFeed: ${eventData.registrationFeed || 'Por confirmar'}
website: ${eventData.website || ''}
distances:
${eventData.distances?.map((d: string) => `  - ${d}`).join('\n') || '  - Por definir'}
cover: 
department: ${eventData.department || ''}
municipality: ${eventData.municipality || ''}
---

${eventData.description || `√önete a este emocionante evento de atletismo en ${eventData.municipality}, ${eventData.department}. Una experiencia deportiva √∫nica que combina competencia, diversi√≥n y los hermosos paisajes de esta regi√≥n colombiana.`}

${regionInfo.description}

## üìÖ Informaci√≥n del Evento

**Fecha:** ${date.toLocaleDateString('es-CO', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })}
**Lugar:** ${eventData.municipality || 'Por definir'}, ${eventData.department || 'Colombia'}
**Organizador:** ${eventData.organizer || 'Por confirmar'}
**Altitud:** ${regionInfo.altitude}

## üèÉ‚Äç‚ôÇÔ∏è Distancias Disponibles

${eventData.distances?.map((d: string) => `- **${d}** - ${getDistanceDescription(d)}`).join('\n') || '- Por definir'}

## üìã Requisitos

- ‚úÖ Certificado m√©dico deportivo vigente (no mayor a 6 meses)
- ‚úÖ Documento de identidad
- ‚úÖ Edad m√≠nima seg√∫n la distancia seleccionada
- ‚úÖ Firma de deslinde de responsabilidad

## üéØ Recomendaciones

### Antes del Evento
- üïê Llegar con 30-45 minutos de anticipaci√≥n
- üëï Usar ropa deportiva adecuada para el clima
- üëü Calzado deportivo en buen estado
- üß¢ Gorra y protector solar

### Durante el Evento
- üíß Mantenerse hidratado en los puntos de hidrataci√≥n
- üì± Llevar identificaci√≥n y contacto de emergencia
- üë• Respetar a otros participantes y voluntarios

## üå§Ô∏è Clima y Preparaci√≥n

${regionInfo.climate}

## üèãÔ∏è‚Äç‚ôÇÔ∏è Plan de Entrenamiento

${distanceInfo}

## üì¶ Incluye tu Inscripci√≥n

- üèÖ Medalla finisher
- üëï Camiseta oficial del evento
- üì¶ Kit de corredor
- ü•§ Hidrataci√≥n durante el recorrido
- üçå Refrigerio post-carrera
- üì∏ Fotograf√≠as del evento
- üè• Asistencia m√©dica
- üìç Chip de cronometraje

## ‚ôø Accesibilidad

Este evento est√° comprometido con la inclusi√≥n y cuenta con:
- üöó Parqueadero accesible
- üöª Ba√±os adaptados
- üë• Personal de apoyo especializado
- üèÉ‚Äç‚ôÄÔ∏è Categor√≠as inclusivas

## üìû Contacto

${eventData.website ? `üåê **Sitio Web:** [${eventData.website}](${eventData.website})` : 'üìß **Email:** Por confirmar'}
üì± **WhatsApp:** Por confirmar
üìç **Punto de encuentro:** Por confirmar

---

*¬°Prep√°rate para vivir una experiencia deportiva inolvidable en ${eventData.municipality}!*
`
}

function getRegionInfo(department: string) {
  const regions = {
    'Antioquia': {
      altitude: '1,495 msnm',
      description: 'La regi√≥n antioque√±a ofrece un clima templado perfecto para el running, con sus monta√±as y valles que brindan paisajes espectaculares.',
      climate: 'El clima en Antioquia es templado durante todo el a√±o, con temperaturas entre 18-24¬∞C. Ideal para eventos deportivos. Se recomienda ropa ligera y mantenerse hidratado.'
    },
    'Bogot√°': {
      altitude: '2,640 msnm',
      description: 'La capital colombiana, ubicada en la sabana cundiboyacense, ofrece un clima fr√≠o ideal para el atletismo de resistencia.',
      climate: 'Bogot√° tiene un clima fr√≠o de monta√±a con temperaturas entre 8-19¬∞C. Se recomienda ropa t√©rmica para el calentamiento y mantenerse bien hidratado debido a la altitud.'
    },
    'Valle del Cauca': {
      altitude: '1,000 msnm',
      description: 'El valle geogr√°fico del r√≠o Cauca ofrece condiciones clim√°ticas ideales y paisajes √∫nicos para eventos deportivos.',
      climate: 'Clima c√°lido tropical con temperaturas entre 22-30¬∞C. Usar ropa ligera, protecci√≥n solar y mantener hidrataci√≥n constante.'
    },
    'Atl√°ntico': {
      altitude: '18 msnm',
      description: 'La regi√≥n caribe√±a brinda un ambiente tropical √∫nico con la calidez de su gente y la brisa del mar.',
      climate: 'Clima tropical c√°lido y h√∫medo con temperaturas entre 26-32¬∞C. Eventos generalmente temprano en la ma√±ana. Hidrataci√≥n abundante es clave.'
    }
  } as any

  return regions[department] || {
    altitude: 'Variable',
    description: 'Una hermosa regi√≥n colombiana que ofrece paisajes √∫nicos y condiciones ideales para el atletismo.',
    climate: 'Consulta las condiciones clim√°ticas locales. Se recomienda ropa deportiva adecuada y mantenerse hidratado.'
  }
}

function getDistanceDescription(distance: string) {
  const descriptions = {
    '1k': 'Ideal para ni√±os y principiantes',
    '2k': 'Perfecta para toda la familia',
    '3k': 'Distancia recreativa',
    '5k': 'Cl√°sica distancia popular',
    '8k': 'Distancia intermedia',
    '10k': 'Distancia ol√≠mpica',
    '15k': 'Resistencia media',
    '21k': 'Media marat√≥n',
    '25k': 'Distancia de resistencia',
    '30k': 'Ultra distancia',
    '42k': 'Marat√≥n completo',
    '50k': 'Ultra marat√≥n',
    '100k': 'Ultra trail'
  } as any

  return descriptions[distance] || 'Distancia deportiva'
}

function getDistanceRecommendations(distances: string[]) {
  if (!distances || distances.length === 0) {
    return '**Entrena gradualmente** y consulta con un profesional para definir tu distancia ideal.'
  }

  const maxDistance = distances.includes('42k') ? '42k' : 
                     distances.includes('21k') ? '21k' : 
                     distances.includes('10k') ? '10k' : '5k'

  const plans = {
    '5k': `**Para 5K (4-6 semanas):**
- Semana 1-2: 3 entrenamientos/semana, 20-30 min corriendo/caminando
- Semana 3-4: 3 entrenamientos/semana, 30-40 min con m√°s tiempo corriendo
- Semana 5-6: Incluir un d√≠a de tempo y uno de intervalos`,

    '10k': `**Para 10K (6-8 semanas):**
- Base aer√≥bica: 3-4 entrenamientos/semana
- Incluir una carrera larga semanal (aumentar 10% cada semana)
- 1 d√≠a de tempo o fartlek
- 1 d√≠a de intervalos
- Tiempo objetivo: completar sin parar`,

    '21k': `**Para Media Marat√≥n (12-16 semanas):**
- 4-5 entrenamientos/semana
- Carrera larga progresiva (llegar a 18-20K)
- 2 d√≠as de velocidad/tempo por semana
- Incluir carreras de pr√°ctica de 10K y 15K
- Trabajar nutrici√≥n e hidrataci√≥n`,

    '42k': `**Para Marat√≥n (16-20 semanas):**
- 5-6 entrenamientos/semana con d√≠as de descanso
- Carreras largas progresivas (llegar a 32-35K)
- Periodizaci√≥n con semanas de descarga
- Pr√°ctica de nutrici√≥n en carreras largas
- Simulacros de ritmo objetivo`
  } as any

  return plans[maxDistance] || '**Entrena de forma progresiva** y adapta el plan a tu nivel actual.'
}
