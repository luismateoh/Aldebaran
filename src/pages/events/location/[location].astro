---
import EventsHeader from "@/components/events-header.astro";
import MainLayout from "@/layouts/main-layout.astro";
import { capitalize } from "@/lib/utils";
import { getCollection } from "astro:content";
import EventCard from "@/components/cards/event-card.astro";

export async function getStaticPaths() {
	const allEvents = (await getCollection("events")).filter((post) => !post.data.draft);
	const uniqueLocations = [
		...new Set(allEvents.map((event) => event.data.municipality).flat())

	];
	return uniqueLocations.map((location) => {
		const filteredPosts = allEvents.filter((post) => !post.data.draft)
			.filter((post) => post.data.municipality.includes(location))
			.sort((b, a) => b.data.eventDate.valueOf() - a.data.eventDate.valueOf());
		return {
			params: { location },
			props: { events: filteredPosts }
		};
	});
}

const { location } = Astro.params;
const { events } = Astro.props;
---

<MainLayout
	title={`${capitalize(location)} | Event`}
	description={`Todos los eventos en ${location}`}
>
	<section class="container py-10">
		<EventsHeader title={`Eventos en ${location}`} />

		<div
			class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-x-6 gap-y-9 md:gap-y-16 lg:gap-x-8"
		>
			{events.map((event) =>
				<EventCard {...event} />)}
		</div>
	</section>
</MainLayout>
